version: "3.8"

services:
  backend:
    build:
      context: ./backend/NederlandseLoterij
      dockerfile: NederlandseLoterij.API/Dockerfile
    ports:
      - "5000:80" # Maps container port 80 to host port 5000
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ConnectionStrings__DefaultConnection=Server=sqlserver;Database=ScratchGame;User Id=sa;Password=Str0ng@P@ssw0rd;Encrypt=false;TrustServerCertificate=true;
    depends_on:
      - sqlserver
      - migrations
    networks:
      - app_network

  migrations:
    build:
      context: ./backend/NederlandseLoterij
      dockerfile: NederlandseLoterij.API/Dockerfile
    command: ["dotnet", "ef", "database", "update"]
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ConnectionStrings__DefaultConnection=Server=sqlserver;Database=ScratchGame;User Id=sa;Password=Str0ng@P@ssw0rd;Encrypt=false;TrustServerCertificate=true;
    depends_on:
      - sqlserver
    networks:
      - app_network

  sqlserver:
    image: mcr.microsoft.com/mssql/server:2022-latest
    container_name: sqlserver
    ports:
      - "1433:1433"
    environment:
      - ACCEPT_EULA=Y
      - SA_PASSWORD=Str0ng@P@ssw0rd
    healthcheck:
      test:
        [
          "CMD",
          "/opt/mssql-tools/bin/sqlcmd",
          "-S",
          "localhost",
          "-U",
          "sa",
          "-P",
          "Str0ng@P@ssw0rd",
          "-Q",
          "SELECT 1",
        ]
      interval: 10s
      timeout: 5s
      retries: 3
    networks:
      - app_network

networks:
  app_network:
